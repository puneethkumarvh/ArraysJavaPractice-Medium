//Question link: https://leetcode.com/problems/maximum-subarray/
//solved using Kadan's algorithm
//Time complexity is O(n) where n is size of array.
//most optimal solution code 
class Solution {
    public int maxSubArray(int[] nums) {
        int max = nums[0];
        int sum = 0;
        for(int i:nums){
            sum += i;
            max= Math.max(sum,max);
            if(sum<0){
                sum = 0;
            }
        }
        return max;
        
    }
}
